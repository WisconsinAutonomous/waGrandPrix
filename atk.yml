project: wagrandprix
default_containers: 
  - dev
  - vnc
custom_cli_arguments:
  nv:
    argparse:
      action: 'store_true'
    all:
      deploy:
        resources:
          reservations:
            devices:
            - driver: nvidia
              capabilities: ["gpu"]
  devices:
    argparse:
      action: 'store_true'
    all:
      privileged: true
  x11:
    argparse:
      action: 'store_true'
    agx:
      volumes:
        - "/tmp/.X11-unix:/tmp/.X11-unix"
      environment:
        DISPLAY: ${DISPLAY}
services:
  dev: &dev_service
    image: "atk/@{project}:dev"
    hostname: "@{project}-dev"
    container_name: "@{project}-dev"
    build: &dev_build
      context: "./"
      dockerfile: "./containers/dev/dev.dockerfile"
      network: "host"
      args: &dev_build_args
        PROJECT: "@{project}"
        USER_UID: "@{uid}"
        USER_GID: "@{gid}"
        APT_DEPENDENCIES: "bash zsh vim git git-lfs python3-pip python3-tk"
        PIP_REQUIREMENTS: "wa_simulator pandas matplotlib python-can psutil twisted numpy>=1.19 opencv-python tornado black Pillow canlib pyserial"
        USER_GROUPS: "dialout video"
    environment:
      DISPLAY: vnc:0.0
      NVIDIA_VISIBLE_DEVICES: "all"
      NVIDIA_DRIVER_CAPABILITIES: "all"
    ports:
      - "8888:8888"
    volumes: 
     - "@{project_root}:/home/@{container_username}/@{project}"
    tty: true
    working_dir: "/home/@{container_username}/@{project}/workspace"
  agx:
    <<: *dev_service
    image: "atk/@{project}:agx"
    hostname: "@{project}-agx"
    runtime: "nvidia"
    privileged: true
    build:
      <<: *dev_build
      args:
        <<: *dev_build_args
        CONTAINERNAME: "agx"
        PIP_REQUIREMENTS: "wa_simulator pandas matplotlib python-can psutil twisted numpy>=1.19 opencv-python tornado black Pillow canlib"
  vnc:
    image: "atk/@{project}:vnc"
    hostname: "@{project}-vnc"
    container_name: "@{project}-vnc"
    build:
      context: "./containers/vnc"
      dockerfile: "./vnc.dockerfile"
      network: "host"
      args:
        VNC_PASSWORD: "@{project}"
        RUN_XTERM: "yes"
        RUN_FLUXBOX: "yes"
    environment:
      RUN_XTERM: no
      RUN_FLUXBOX: yes
    ports:
      - "8080:8080"
      - "5900:5900"
  wasim:
    image: "wiscauto/@{project}:wasim"
    hostname: "@{project}-wasim"
    container_name: "@{project}-wasim"
    build:
      context: ./containers/wasim
      dockerfile: ./wasim.dockerfile
      network: "host"
      args:
        USERNAME: "@{project}"
        USER_UID: "@{uid}"
        USER_GID: "@{gid}"
        APT_DEPENDENCIES: "wget bash python3-tk"
        CONDA_CHANNELS: ""
        CONDA_DEPENDENCIES: ""
        PIP_DEPENDENCIES: "wa_simulator"
    working_dir: "/home/@{container_username}/@{project}/sim/wasim"
    environment:
      DISPLAY: "vnc:0.0"
    volumes: 
      - "@{project_root}:/home/@{container_username}/@{project}"
    tty: true
networks:
  default:
    name: "@{project}"
